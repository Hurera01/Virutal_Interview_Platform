// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Virtual_Interview_Platform.Data;

#nullable disable

namespace Virtual_Interview_Platform.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250407081508_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Virtual_Interview_Platform.Model.Candidate", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResumeURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CandidateID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.CandidateEducation", b =>
                {
                    b.Property<int>("EducationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationID"));

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationID");

                    b.HasIndex("CandidateID");

                    b.ToTable("CandidateEducations");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.CandidateExperience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceID"));

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndDate")
                        .HasColumnType("int");

                    b.Property<int>("JobTitle")
                        .HasColumnType("int");

                    b.Property<int>("StartDate")
                        .HasColumnType("int");

                    b.HasKey("ExperienceID");

                    b.HasIndex("CandidateID");

                    b.ToTable("CandidateExperiences");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.Recruiter", b =>
                {
                    b.Property<int>("RecruiterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecruiterID"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RecruiterID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.Candidate", b =>
                {
                    b.HasOne("Virtual_Interview_Platform.Model.User", "Users")
                        .WithOne("Candidates")
                        .HasForeignKey("Virtual_Interview_Platform.Model.Candidate", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.CandidateEducation", b =>
                {
                    b.HasOne("Virtual_Interview_Platform.Model.Candidate", "Candidates")
                        .WithMany("CandidateEducations")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.CandidateExperience", b =>
                {
                    b.HasOne("Virtual_Interview_Platform.Model.Candidate", "Candidates")
                        .WithMany("CandidateExperiences")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.Recruiter", b =>
                {
                    b.HasOne("Virtual_Interview_Platform.Model.User", "Users")
                        .WithOne("Recruiters")
                        .HasForeignKey("Virtual_Interview_Platform.Model.Recruiter", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.Candidate", b =>
                {
                    b.Navigation("CandidateEducations");

                    b.Navigation("CandidateExperiences");
                });

            modelBuilder.Entity("Virtual_Interview_Platform.Model.User", b =>
                {
                    b.Navigation("Candidates")
                        .IsRequired();

                    b.Navigation("Recruiters")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
